[{"/home/arcturian/amm/src/index.js":"1","/home/arcturian/amm/src/reportWebVitals.js":"2","/home/arcturian/amm/src/components/App.js":"3","/home/arcturian/amm/src/store/store.js":"4","/home/arcturian/amm/src/components/Navigation.js":"5","/home/arcturian/amm/src/components/Tabs.js":"6","/home/arcturian/amm/src/components/Swap.js":"7","/home/arcturian/amm/src/components/Deposit.js":"8","/home/arcturian/amm/src/components/Charts.js":"9","/home/arcturian/amm/src/components/Withdraw.js":"10","/home/arcturian/amm/src/store/interactions.js":"11","/home/arcturian/amm/src/store/reducers/provider.js":"12","/home/arcturian/amm/src/store/reducers/tokens.js":"13","/home/arcturian/amm/src/store/reducers/amm.js":"14","/home/arcturian/amm/src/components/Alert.js":"15","/home/arcturian/amm/src/components/Charts.config.js":"16","/home/arcturian/amm/src/store/selectors.js":"17","/home/arcturian/amm/src/components/Loading.js":"18"},{"size":716,"mtime":1695871684918,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1695160235541,"results":"21","hashOfConfig":"20"},{"size":15675,"mtime":1700178013837,"results":"22","hashOfConfig":"20"},{"size":363,"mtime":1695160235545,"results":"23","hashOfConfig":"20"},{"size":2836,"mtime":1700178404064,"results":"24","hashOfConfig":"20"},{"size":629,"mtime":1695160235537,"results":"25","hashOfConfig":"20"},{"size":11012,"mtime":1700178252472,"results":"26","hashOfConfig":"20"},{"size":5903,"mtime":1699309710431,"results":"27","hashOfConfig":"20"},{"size":2907,"mtime":1699309429734,"results":"28","hashOfConfig":"20"},{"size":3975,"mtime":1699309701147,"results":"29","hashOfConfig":"20"},{"size":6702,"mtime":1700178472423,"results":"30","hashOfConfig":"20"},{"size":564,"mtime":1695160235541,"results":"31","hashOfConfig":"20"},{"size":589,"mtime":1695856985460,"results":"32","hashOfConfig":"20"},{"size":2804,"mtime":1700178295018,"results":"33","hashOfConfig":"20"},{"size":552,"mtime":1695160235529,"results":"34","hashOfConfig":"20"},{"size":546,"mtime":1695160235533,"results":"35","hashOfConfig":"20"},{"size":1218,"mtime":1695160235541,"results":"36","hashOfConfig":"20"},{"size":269,"mtime":1695160235533,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zl16v2",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/arcturian/amm/src/index.js",[],[],"/home/arcturian/amm/src/reportWebVitals.js",[],[],"/home/arcturian/amm/src/components/App.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],[],"import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { HashRouter, Routes, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport { ethers } from 'ethers'\n\n// Components\nimport Navigation from './Navigation'\nimport Tabs from './Tabs'\nimport Swap from './Swap'\nimport Deposit from './Deposit'\nimport Withdraw from './Withdraw'\nimport Charts from './Charts'\n\n// UI Features\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\n// Card Display Features\nimport Button from 'react-bootstrap/Button' \nimport Card from 'react-bootstrap/Card' \nimport Collapse from 'react-bootstrap/Collapse'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\n// Token icons & Background\nimport T1Icon from '../T1-Icon.png';\nimport T2Icon from '../T2-Icon.jpg';\nimport T3Icon from '../T3-Icon.jpg';\nimport TokenPair from '../TokenPair.jpg';\nimport TokenPair2 from '../TokenPair2.png';\nimport TokenPair3 from '../TokenPair3.png';\nimport backgroundimage from '../DappBackground.jpg';\n\nimport wethIcon from '../WETH.png'\nimport daiIcon from '../DAI.png'\n\n// ABIs: Import your contract ABIs here\nimport AMM_ABI from '../abis/AMM.json'\nimport TOKEN_ABI from '../abis/Token.json'\n\n// Config: Import your network config here\nimport config from '../config.json'\n\nimport {\n  loadProvider,\n  loadNetwork,\n  loadAccount,\n  loadTokens,\n  loadDappDappUSD,\n} from '../store/interactions'\n\nfunction App() {\n\n    const routerArtifact = require('@uniswap/v2-periphery/build/UniswapV2Router02.json')\n    const erc20Abi = require('../abis/erc20.json')\n    const wethAbi = require('../abis/weth.json')\n\n  // Set Token Addresses\n    const [usd, setUSD] = useState(null)\n    const [dapp, setDapp] = useState(null)\n    const [apple, setApple] = useState(null)\n    const [dai, setDAI] = useState(null)\n    const [weth, setWETH] = useState(null)\n    const [router, setRouter] = useState(null)\n\n  // Set rate values for each trading pair\n    const [rate1, setRate1] = useState(null)\n    const [rate2, setRate2] = useState(null)\n    const [rate3, setRate3] = useState(null)\n\n  // Card Functionality\n    const [open1, setOpen1] = useState(false);\n    const [open2, setOpen2] = useState(false);\n    const [open3, setOpen3] = useState(false);\n\n  // Set Address for DAPP / USD Pool\n    const [dappDappUSD, setDappDappUSD] = useState(null)\n\n  // Set Address for APPL / USD Pool\n    const [dappAppleUSD, setDappAppleUSD] = useState(null)\n   \n  // Set Address for DAPP / APPL Pool\n    const [dappDappApple, setDappDappApple] = useState(null)\n\n  // Link Address for DAI / WETH Pool on Uniswap\n    const [daiWethUniswap, setDaiWethUniswap] = useState(null)\n\n  // Link Address for WETH / DAI Pool on Uniswap\n    const [wethDaiUniswap, setWethDaiUniswap] = useState(null)\n\n  // Load DAI/WETH Balances from Mainnet\n    const poolDAI = useSelector(state => state.amm.poolDAI)\n    const poolWETH = useSelector(state => state.amm.poolWETH)\n    const poolDAI1 = useSelector(state => state.amm.poolDAI1)\n    const poolWETH1 = useSelector(state => state.amm.poolWETH1)\n\n  // Assign Active User Account and Signer\n    const [account, setAccount] = useState(null)\n    const [signer, setSigner] = useState(null)\n    const [wallet, setWallet] = useState(null)\n\n  // Set Balances for DAPP / USD\n    const [balance1, setBalance1] = useState(0)\n    const [balance2, setBalance2] = useState(0)\n\n  // Load Account Balance Individually\n    const [dappAccountBalance, setDappAccountBalance] = useState(0)\n    const [usdAccountBalance, setUSDAccountBalance] = useState(0)\n    const [appleAccountBalance, setAppleAccountBalance] = useState(0)\n    const [daiAccountBalance, setDAIAccountBalance] = useState(0)\n    const [wethAccountBalance, setWETHAccountBalance] = useState(0)\n\n  // Set Balances for APPL / USD\n    const [appleBalance, setAppleBalance] = useState(0)\n    const [usdBalance, setUSDBalance] = useState(0)\n\n  // Set Balances for DAPP / APPL\n    const [dappBalance, setDappBalance] = useState(0)\n    const [appleBalance2, setAppleBalance2] = useState(0)\n\n    const dispatch = useDispatch()\n\n  const loadBlockchainData = async () => {\n\n    // Initiate provider\n      const provider = await loadProvider(dispatch)\n\n    // Fetch current network's chainId (e.g. hardhat: 31337, kovan: 42)\n      const chainId = await loadNetwork(provider, dispatch)\n\n    // Load User Account\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\n      const account = ethers.utils.getAddress(accounts[0])\n      setAccount(account)\n\n      const wallet = new ethers.Wallet('0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80')\n      setWallet(wallet)\n\n      const signer = wallet.connect(provider)\n      setSigner(signer)\n\n    // Reload page when network changes\n      window.ethereum.on('chainChanged', () => {\n        window.location.reload()\n      })\n\n    // Fetch current account from Metamask when changed\n      window.ethereum.on('accountsChanged', async () => {\n        await loadAccount(dispatch)\n      })\n\n    // Initiate Contracts\n      await loadTokens(provider, chainId, dispatch)\n      await loadDappDappUSD(provider, chainId, dispatch)\n\n    // Load Token Addresses\n      let usd = new ethers.Contract(config[1].usd.address, TOKEN_ABI, provider)\n      setUSD(usd)\n\n      let dapp = new ethers.Contract(config[1].dapp.address, TOKEN_ABI, provider)\n      setDapp(dapp)\n\n      let apple = new ethers.Contract(config[1].apple.address, TOKEN_ABI, provider)\n      setApple(apple)\n\n      let dai = new ethers.Contract(config[1].dai.address, erc20Abi, provider)\n      setDAI(dai)\n\n      let weth = new ethers.Contract(config[1].weth.address, wethAbi, provider)\n      setWETH(weth)\n   \n    // Load Token Account Balances Individually\n      let dappAccountBalance = await dapp.balanceOf(accounts[0])\n      dappAccountBalance = ethers.utils.formatUnits(dappAccountBalance, 18)\n      setDappAccountBalance(dappAccountBalance)\n\n      let usdAccountBalance = await usd.balanceOf(accounts[0])\n      usdAccountBalance = ethers.utils.formatUnits(usdAccountBalance, 18)\n      setUSDAccountBalance(usdAccountBalance)\n\n      let appleAccountBalance = await apple.balanceOf(accounts[0])\n      appleAccountBalance = ethers.utils.formatUnits(appleAccountBalance, 18)\n      setAppleAccountBalance(appleAccountBalance)\n\n      let daiAccountBalance = await dai.balanceOf(accounts[0])\n      daiAccountBalance = ethers.utils.formatUnits(daiAccountBalance, 18)\n      setDAIAccountBalance(daiAccountBalance)\n\n      let wethAccountBalance = await weth.balanceOf(accounts[0])\n      wethAccountBalance = ethers.utils.formatUnits(wethAccountBalance, 18)\n      setWETHAccountBalance(wethAccountBalance)\n\n    // Load Dapp DAPP / USD Pool Address\n      const dappDappUSD = new ethers.Contract(config[1].dappDappUSD.address, AMM_ABI, provider)\n      setDappDappUSD(dappDappUSD)\n\n    // Load Dapp APPL / USD Pool Address\n      const dappAppleUSD = new ethers.Contract(config[1].dappAppleUSD.address, AMM_ABI, provider)\n      setDappAppleUSD(dappAppleUSD)\n\n    // Load Dapp DAPP / APPL Pool Address\n      const dappDappApple = new ethers.Contract(config[1].dappDappApple.address, AMM_ABI, provider)\n      setDappDappApple(dappDappApple)\n\n    // Load UniswapV2 Router Address\n      const router = new ethers.Contract('0x7a250d5630b4cf539739df2c5dacb4c659f2488d', routerArtifact.abi, provider)\n      setRouter(router)\n\n    // Load Balances for DAPP / USD\n      let balance1 = await dapp.balanceOf(dappDappUSD.address)\n      balance1 = ethers.utils.formatUnits(balance1, 18)\n      setBalance1(balance1)\n\n      let balance2 = await usd.balanceOf(dappDappUSD.address)\n      balance2 = ethers.utils.formatUnits(balance2, 18)\n      setBalance2(balance2)\n\n    // Load Balances for APPL / USD\n      let appleBalance = await apple.balanceOf(dappAppleUSD.address)\n      appleBalance = ethers.utils.formatUnits(appleBalance, 18)\n      setAppleBalance(appleBalance)\n\n      let usdBalance = await usd.balanceOf(dappAppleUSD.address)\n      usdBalance = ethers.utils.formatUnits(usdBalance, 18)\n      setUSDBalance(usdBalance)\n\n    // Load Balances for DAPP / APPL\n      let dappBalance = await dapp.balanceOf(dappDappApple.address)\n      dappBalance = ethers.utils.formatUnits(dappBalance, 18)\n      setDappBalance(dappBalance)\n\n      let appleBalance2 = await apple.balanceOf(dappDappApple.address)\n      appleBalance2 = ethers.utils.formatUnits(appleBalance2, 18)\n      setAppleBalance2(appleBalance2)\n\n    // Assign Dynamic Rate Values for Each Pair\n      setRate1((balance2 / balance1))\n      setRate2((usdBalance / appleBalance))\n      setRate3((appleBalance2 / dappBalance))\n  }\n\n  useEffect(() => {\n    loadBlockchainData()\n  }, []);\n\n  return(\n\n<div  style={{\n      backgroundImage: `url(${backgroundimage})`,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      width: '100vw',\n      height: '100vh'\n      }}>\n  <Container>\n    <HashRouter>\n        <style>{'body { background-color: blue; }'}</style>\n      <Navigation  />\n    <>\n  <Row>\n    <Col>\n      <Button\n        onClick={() => setOpen1(!open1)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open1}\n        className='my-4'\n      >\n        (1) DAPP / USD \n      </Button>\n      <div style={{ minHeight: '100px', textAlign: 'left'}}>\n        <Collapse in={open1} dimension=\"width\">\n          <div id=\"example-collapse-text\">\n            <Card body style={{ width: '275px', backgroundColor: 'red|transparent' }}>\n          <ListGroup>\n            <ListGroup.Item className='bg-warning bg-gradient bg-opacity-25'>\n          <h6 className='my-1'>\n              <img\n                alt=\"dapptoken\"\n                src={T1Icon}\n                width=\"40\"\n                height=\"40\"\n                className=\"align-right mx-3 img-fluid\"\n                />\n          <strong>{parseFloat(balance1).toFixed(2)} DAPP</strong></h6>\n            </ListGroup.Item>\n            <ListGroup.Item className='bg-warning bg-gradient bg-opacity-25'>\n          <h6 className='my-1'>\n              <img\n                alt=\"USDtoken\"\n                src={T2Icon}\n                width=\"40\"\n                height=\"40\"\n                className=\"align-right mx-3 img-fluid rounded-circle\"\n                />\n          <strong>{parseFloat(balance2).toFixed(2)} USD</strong></h6>\n            </ListGroup.Item>\n            <ListGroup.Item className='bg-warning bg-gradient bg-opacity-25'>\n          <h6 className='my-1'>\n                          <img\n                alt=\"dapp/usd-pair\"\n                src={TokenPair}\n                width=\"70\"\n                height=\"40\"\n                className=\"align-right mx-3 img-fluid rounded\"\n                />\n          <strong>Rate: {parseFloat(rate1).toFixed(2)}</strong></h6>\n            </ListGroup.Item>\n         </ListGroup> \n            </Card>\n         \n          </div>\n        </Collapse>\n      </div>\n    </Col>\n    <Col>\n      <Button\n        onClick={() => setOpen2(!open2)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open2}\n        className='my-4'\n      >\n        (2) APPL / USD \n      </Button>\n      <div style={{ minHeight: '100px', textAlign: 'left'}}>\n        <Collapse in={open2} dimension=\"width\">\n          <div id=\"example-collapse-text\">\n            <Card body style={{ width: '275px', backgroundColor: 'red|transparent' }}>\n          <ListGroup>\n            <ListGroup.Item className='bg-warning bg-gradient bg-opacity-25'>\n          <h6 className='my-1'>\n                          <img\n                alt=\"appltoken\"\n                src={T3Icon}\n                width=\"40\"\n                height=\"40\"\n                className=\"align-right mx-3 img-fluid rounded-circle\"\n                />\n          <strong>{parseFloat(appleBalance).toFixed(2)} APPL</strong></h6>\n            </ListGroup.Item>\n            <ListGroup.Item className='bg-warning bg-gradient bg-opacity-25'>\n          <h6 className='my-1'>\n                          <img\n                alt=\"usdtoken\"\n                src={T2Icon}\n                width=\"40\"\n                height=\"40\"\n                className=\"align-right mx-3 img-fluid rounded-circle\"\n                />\n          <strong>{parseFloat(usdBalance).toFixed(2)} USD</strong></h6>\n            </ListGroup.Item>\n            <ListGroup.Item className='bg-warning bg-gradient bg-opacity-25'>\n          <h6 className='my-1'>\n                          <img\n                alt=\"appl/usd-pair\"\n                src={TokenPair2}\n                width=\"70\"\n                height=\"40\"\n                className=\"align-right mx-3 img-fluid rounded\"\n                />\n          <strong>Rate: {parseFloat(rate2).toFixed(2)}</strong></h6>\n            </ListGroup.Item>\n         </ListGroup> \n            </Card>\n         \n          </div>\n        </Collapse>\n      </div>\n    </Col>\n    <Col>\n      <Button\n        onClick={() => setOpen3(!open3)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open3}\n        className='my-4'\n      >\n        (3) DAPP / APPL \n      </Button>\n      <div style={{ minHeight: '100px', textAlign: 'left'}}>\n        <Collapse in={open3} dimension=\"width\">\n          <div id=\"example-collapse-text\">\n            <Card body style={{ width: '275px', backgroundColor: 'red|transparent' }}>\n          <ListGroup>\n            <ListGroup.Item className='bg-warning bg-gradient bg-opacity-25'>\n          <h6 className='my-1'>\n                          <img\n                alt=\"dapptoken\"\n                src={T1Icon}\n                width=\"40\"\n                height=\"40\"\n                className=\"align-right mx-3 img-fluid\"\n                />\n          <strong>{parseFloat(dappBalance).toFixed(2)} DAPP</strong></h6>\n            </ListGroup.Item>\n            <ListGroup.Item className='bg-warning bg-gradient bg-opacity-25'>\n          <h6 className='my-1'>\n                          <img\n                alt=\"appletoken\"\n                src={T3Icon}\n                width=\"40\"\n                height=\"40\"\n                className=\"align-right mx-3 img-fluid rounded-circle\"\n                />\n          <strong>{parseFloat(appleBalance2).toFixed(2)} APPL</strong></h6>\n            </ListGroup.Item>\n            <ListGroup.Item className='bg-warning bg-gradient bg-opacity-25'>\n          <h6 className='my-1'>\n                          <img\n                alt=\"dapp/apple-pair\"\n                src={TokenPair3}\n                width=\"70\"\n                height=\"40\"\n                className=\"align-right mx-3 img-fluid rounded\"\n                />\n          <strong>Rate: {parseFloat(rate3).toFixed(2)}</strong></h6>\n            </ListGroup.Item>\n         </ListGroup> \n            </Card>\n          </div>\n        </Collapse>\n      </div>\n    </Col>\n  </Row>\n    </>\n        <hr />\n      <Tabs />\n      <Routes>\n        <Route exact path=\"/\" element={<Swap\n                                          dappAccountBalance={dappAccountBalance}\n                                          usdAccountBalance={usdAccountBalance}\n                                          appleAccountBalance={appleAccountBalance}\n                                          daiAccountBalance={daiAccountBalance}\n                                          wethAccountBalance={wethAccountBalance}\n                                          />} />\n        <Route path=\"/deposit\" element={<Deposit />} />\n        <Route path=\"/withdraw\" element={<Withdraw />} />\n        <Route path=\"/charts\" element={<Charts />} />\n      </Routes>\n    </HashRouter>\n  </Container>\n</div>\n\n  )\n}\n\nexport default App;\n",[],"/home/arcturian/amm/src/store/store.js",[],[],"/home/arcturian/amm/src/components/Navigation.js",["118","119"],[],"/home/arcturian/amm/src/components/Tabs.js",[],[],"/home/arcturian/amm/src/components/Swap.js",["120","121","122","123"],[],"/home/arcturian/amm/src/components/Deposit.js",["124","125","126","127","128","129","130"],[],"/home/arcturian/amm/src/components/Charts.js",[],[],"/home/arcturian/amm/src/components/Withdraw.js",[],[],[],"/home/arcturian/amm/src/store/interactions.js",["131"],[],"/home/arcturian/amm/src/store/reducers/provider.js",[],[],"/home/arcturian/amm/src/store/reducers/tokens.js",[],[],"/home/arcturian/amm/src/store/reducers/amm.js",[],[],"/home/arcturian/amm/src/components/Alert.js",[],[],"/home/arcturian/amm/src/components/Charts.config.js",[],[],"/home/arcturian/amm/src/store/selectors.js",[],[],"/home/arcturian/amm/src/components/Loading.js",[],[],{"ruleId":"132","severity":1,"message":"133","line":34,"column":8,"nodeType":"134","messageId":"135","endLine":34,"endColumn":16},{"ruleId":"132","severity":1,"message":"136","line":35,"column":8,"nodeType":"134","messageId":"135","endLine":35,"endColumn":15},{"ruleId":"132","severity":1,"message":"137","line":59,"column":12,"nodeType":"134","messageId":"135","endLine":59,"endColumn":15},{"ruleId":"132","severity":1,"message":"138","line":60,"column":12,"nodeType":"134","messageId":"135","endLine":60,"endColumn":16},{"ruleId":"132","severity":1,"message":"139","line":61,"column":12,"nodeType":"134","messageId":"135","endLine":61,"endColumn":17},{"ruleId":"132","severity":1,"message":"140","line":62,"column":12,"nodeType":"134","messageId":"135","endLine":62,"endColumn":15},{"ruleId":"132","severity":1,"message":"141","line":63,"column":12,"nodeType":"134","messageId":"135","endLine":63,"endColumn":16},{"ruleId":"132","severity":1,"message":"142","line":64,"column":12,"nodeType":"134","messageId":"135","endLine":64,"endColumn":18},{"ruleId":"132","severity":1,"message":"143","line":77,"column":12,"nodeType":"134","messageId":"135","endLine":77,"endColumn":23},{"ruleId":"132","severity":1,"message":"144","line":80,"column":12,"nodeType":"134","messageId":"135","endLine":80,"endColumn":24},{"ruleId":"132","severity":1,"message":"145","line":83,"column":12,"nodeType":"134","messageId":"135","endLine":83,"endColumn":25},{"ruleId":"132","severity":1,"message":"146","line":86,"column":12,"nodeType":"134","messageId":"135","endLine":86,"endColumn":26},{"ruleId":"132","severity":1,"message":"147","line":86,"column":28,"nodeType":"134","messageId":"135","endLine":86,"endColumn":45},{"ruleId":"132","severity":1,"message":"148","line":89,"column":12,"nodeType":"134","messageId":"135","endLine":89,"endColumn":26},{"ruleId":"132","severity":1,"message":"149","line":89,"column":28,"nodeType":"134","messageId":"135","endLine":89,"endColumn":45},{"ruleId":"132","severity":1,"message":"150","line":92,"column":11,"nodeType":"134","messageId":"135","endLine":92,"endColumn":18},{"ruleId":"132","severity":1,"message":"151","line":93,"column":11,"nodeType":"134","messageId":"135","endLine":93,"endColumn":19},{"ruleId":"132","severity":1,"message":"152","line":94,"column":11,"nodeType":"134","messageId":"135","endLine":94,"endColumn":19},{"ruleId":"132","severity":1,"message":"153","line":95,"column":11,"nodeType":"134","messageId":"135","endLine":95,"endColumn":20},{"ruleId":"132","severity":1,"message":"154","line":98,"column":12,"nodeType":"134","messageId":"135","endLine":98,"endColumn":19},{"ruleId":"132","severity":1,"message":"155","line":99,"column":12,"nodeType":"134","messageId":"135","endLine":99,"endColumn":18},{"ruleId":"132","severity":1,"message":"156","line":100,"column":12,"nodeType":"134","messageId":"135","endLine":100,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":244,"column":6,"nodeType":"159","endLine":244,"endColumn":8,"suggestions":"160"},{"ruleId":"132","severity":1,"message":"161","line":9,"column":10,"nodeType":"134","messageId":"135","endLine":9,"endColumn":22},{"ruleId":"132","severity":1,"message":"162","line":12,"column":10,"nodeType":"134","messageId":"135","endLine":12,"endColumn":24},{"ruleId":"132","severity":1,"message":"163","line":38,"column":12,"nodeType":"134","messageId":"135","endLine":38,"endColumn":17},{"ruleId":"132","severity":1,"message":"164","line":53,"column":11,"nodeType":"134","messageId":"135","endLine":53,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":65,"column":28,"nodeType":"167","messageId":"168","endLine":65,"endColumn":30},{"ruleId":"157","severity":1,"message":"169","line":179,"column":8,"nodeType":"159","endLine":179,"endColumn":33,"suggestions":"170"},{"ruleId":"132","severity":1,"message":"171","line":23,"column":10,"nodeType":"134","messageId":"135","endLine":23,"endColumn":21},{"ruleId":"132","severity":1,"message":"172","line":24,"column":10,"nodeType":"134","messageId":"135","endLine":24,"endColumn":21},{"ruleId":"132","severity":1,"message":"173","line":24,"column":23,"nodeType":"134","messageId":"135","endLine":24,"endColumn":37},{"ruleId":"132","severity":1,"message":"163","line":26,"column":10,"nodeType":"134","messageId":"135","endLine":26,"endColumn":15},{"ruleId":"132","severity":1,"message":"174","line":26,"column":17,"nodeType":"134","messageId":"135","endLine":26,"endColumn":25},{"ruleId":"132","severity":1,"message":"175","line":41,"column":9,"nodeType":"134","messageId":"135","endLine":41,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":52,"column":24,"nodeType":"167","messageId":"168","endLine":52,"endColumn":26},{"ruleId":"132","severity":1,"message":"176","line":34,"column":8,"nodeType":"134","messageId":"135","endLine":34,"endColumn":22},"no-unused-vars","'wethIcon' is defined but never used.","Identifier","unusedVar","'daiIcon' is defined but never used.","'usd' is assigned a value but never used.","'dapp' is assigned a value but never used.","'apple' is assigned a value but never used.","'dai' is assigned a value but never used.","'weth' is assigned a value but never used.","'router' is assigned a value but never used.","'dappDappUSD' is assigned a value but never used.","'dappAppleUSD' is assigned a value but never used.","'dappDappApple' is assigned a value but never used.","'daiWethUniswap' is assigned a value but never used.","'setDaiWethUniswap' is assigned a value but never used.","'wethDaiUniswap' is assigned a value but never used.","'setWethDaiUniswap' is assigned a value but never used.","'poolDAI' is assigned a value but never used.","'poolWETH' is assigned a value but never used.","'poolDAI1' is assigned a value but never used.","'poolWETH1' is assigned a value but never used.","'account' is assigned a value but never used.","'signer' is assigned a value but never used.","'wallet' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadBlockchainData'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'loadProvider' is defined but never used.","'loadAggregator' is defined but never used.","'price' is assigned a value but never used.","'aggregator' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getPrice'. Either include it or remove the dependency array.",["178"],"'token1Final' is assigned a value but never used.","'token2Final' is assigned a value but never used.","'setToken2Final' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'loadBlockchainData' is assigned a value but never used.","'AGGREGATOR_ABI' is defined but never used.",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [loadBlockchainData]",{"range":"183","text":"184"},"Update the dependencies array to be: [getPrice, inputToken, outputToken]",{"range":"185","text":"186"},[8755,8757],"[loadBlockchainData]",[6491,6516],"[getPrice, inputToken, outputToken]"]