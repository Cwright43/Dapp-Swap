{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst tokens = state => state.tokens.contracts;\n\nconst swaps = state => state.amm.swaps;\n\nexport const chartSelector = createSelector(swaps, tokens, (swaps, tokens) => {\n  if (!tokens[0] || !tokens[1]) {\n    return;\n  } // Filter swaps by selected tokens\n\n\n  swaps = swaps.filter(s => s.args.tokenGet === tokens[0].address || s.args.tokenGet === tokens[1].address);\n  swaps = swaps.filter(s => s.args.tokenGive === tokens[0].address || s.args.tokenGive === tokens[1].address); // Sort swaps by date ascending to compare history\n\n  swaps = swaps.sort((a, b) => a.args.timestamp - b.args.timestamp); // Decorate swaps - add display attributes\n\n  swaps = swaps.map(s => decorateSwap(s)); // Fetch prices\n\n  const prices = swaps.map(s => s.rate);\n  swaps = swaps.sort((a, b) => b.args.timestamp - a.args.timestamp);\n  return {\n    swaps: swaps,\n    series: [{\n      name: \"Rate\",\n      data: prices\n    }]\n  };\n});\n\nconst decorateSwap = swap => {\n  // Calculate token price to 5 decimal places\n  const precision = 100000;\n  let rate = swap.args.token2Balance / swap.args.token1Balance;\n  rate = Math.round(rate * precision) / precision;\n  return { ...swap,\n    rate\n  };\n};","map":{"version":3,"names":["createSelector","tokens","state","contracts","swaps","amm","chartSelector","filter","s","args","tokenGet","address","tokenGive","sort","a","b","timestamp","map","decorateSwap","prices","rate","series","name","data","swap","precision","token2Balance","token1Balance","Math","round"],"sources":["/home/arcturian/amm/src/store/selectors.js"],"sourcesContent":["import { createSelector } from 'reselect'\n\nconst tokens = state => state.tokens.contracts\nconst swaps = state => state.amm.swaps\n\nexport const chartSelector = createSelector(swaps, tokens, (swaps, tokens) => {\n  if (!tokens[0] || !tokens[1]) { return }\n\n  // Filter swaps by selected tokens\n  swaps = swaps.filter((s) => s.args.tokenGet === tokens[0].address || s.args.tokenGet === tokens[1].address)\n  swaps = swaps.filter((s) => s.args.tokenGive === tokens[0].address || s.args.tokenGive === tokens[1].address)\n\n  // Sort swaps by date ascending to compare history\n  swaps = swaps.sort((a, b) => a.args.timestamp - b.args.timestamp)\n\n  // Decorate swaps - add display attributes\n  swaps = swaps.map((s) => decorateSwap(s))\n\n  // Fetch prices\n  const prices = swaps.map(s => s.rate)\n\n  swaps = swaps.sort((a, b) => b.args.timestamp - a.args.timestamp)\n\n  return({\n    swaps: swaps,\n    series: [{\n      name: \"Rate\",\n      data: prices\n    }]\n  })\n})\n\nconst decorateSwap = (swap) => {\n  // Calculate token price to 5 decimal places\n  const precision = 100000\n\n  let rate = (swap.args.token2Balance / swap.args.token1Balance)\n\n  rate = Math.round(rate * precision) / precision\n\n  return({\n    ...swap,\n    rate\n  })\n}\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaE,SAArC;;AACA,MAAMC,KAAK,GAAGF,KAAK,IAAIA,KAAK,CAACG,GAAN,CAAUD,KAAjC;;AAEA,OAAO,MAAME,aAAa,GAAGN,cAAc,CAACI,KAAD,EAAQH,MAAR,EAAgB,CAACG,KAAD,EAAQH,MAAR,KAAmB;EAC5E,IAAI,CAACA,MAAM,CAAC,CAAD,CAAP,IAAc,CAACA,MAAM,CAAC,CAAD,CAAzB,EAA8B;IAAE;EAAQ,CADoC,CAG5E;;;EACAG,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOC,QAAP,KAAoBT,MAAM,CAAC,CAAD,CAAN,CAAUU,OAA9B,IAAyCH,CAAC,CAACC,IAAF,CAAOC,QAAP,KAAoBT,MAAM,CAAC,CAAD,CAAN,CAAUU,OAA3F,CAAR;EACAP,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOG,SAAP,KAAqBX,MAAM,CAAC,CAAD,CAAN,CAAUU,OAA/B,IAA0CH,CAAC,CAACC,IAAF,CAAOG,SAAP,KAAqBX,MAAM,CAAC,CAAD,CAAN,CAAUU,OAA7F,CAAR,CAL4E,CAO5E;;EACAP,KAAK,GAAGA,KAAK,CAACS,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACL,IAAF,CAAOO,SAAP,GAAmBD,CAAC,CAACN,IAAF,CAAOO,SAA/C,CAAR,CAR4E,CAU5E;;EACAZ,KAAK,GAAGA,KAAK,CAACa,GAAN,CAAWT,CAAD,IAAOU,YAAY,CAACV,CAAD,CAA7B,CAAR,CAX4E,CAa5E;;EACA,MAAMW,MAAM,GAAGf,KAAK,CAACa,GAAN,CAAUT,CAAC,IAAIA,CAAC,CAACY,IAAjB,CAAf;EAEAhB,KAAK,GAAGA,KAAK,CAACS,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACN,IAAF,CAAOO,SAAP,GAAmBF,CAAC,CAACL,IAAF,CAAOO,SAA/C,CAAR;EAEA,OAAO;IACLZ,KAAK,EAAEA,KADF;IAELiB,MAAM,EAAE,CAAC;MACPC,IAAI,EAAE,MADC;MAEPC,IAAI,EAAEJ;IAFC,CAAD;EAFH,CAAP;AAOD,CAzB0C,CAApC;;AA2BP,MAAMD,YAAY,GAAIM,IAAD,IAAU;EAC7B;EACA,MAAMC,SAAS,GAAG,MAAlB;EAEA,IAAIL,IAAI,GAAII,IAAI,CAACf,IAAL,CAAUiB,aAAV,GAA0BF,IAAI,CAACf,IAAL,CAAUkB,aAAhD;EAEAP,IAAI,GAAGQ,IAAI,CAACC,KAAL,CAAWT,IAAI,GAAGK,SAAlB,IAA+BA,SAAtC;EAEA,OAAO,EACL,GAAGD,IADE;IAELJ;EAFK,CAAP;AAID,CAZD"},"metadata":{},"sourceType":"module"}