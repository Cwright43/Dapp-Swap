{"ast":null,"code":"var _jsxFileName = \"/home/arcturian/amm/src/components/Charts.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport Chart from 'react-apexcharts';\nimport { ethers } from 'ethers';\nimport { options, series } from './Charts.config';\nimport { chartSelector } from '../store/selectors';\nimport { useEffect } from 'react';\nimport Loading from './Loading';\nimport { loadAllSwaps } from '../store/interactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Charts = () => {\n  _s();\n\n  const provider = useSelector(state => state.provider.connection);\n  const tokens = useSelector(state => state.tokens.contracts);\n  const symbols = useSelector(state => state.tokens.symbols);\n  const amm = useSelector(state => state.amm.contract);\n  const chart = useSelector(chartSelector);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (provider && amm) {\n      loadAllSwaps(provider, amm, dispatch);\n    }\n  }, [provider, amm, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: provider && amm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Chart, {\n        type: \"line\",\n        options: options,\n        series: chart ? chart.series : series,\n        width: \"100%\",\n        height: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Hash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Token Give\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount Give\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Token Get\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount Get\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: chart.swaps && chart.swaps.map((swap, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: swap.hash.slice(0, 5) + '...' + swap.hash.slice(61, 66)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: swap.args.tokenGive === tokens[0].address ? symbols[0] : symbols[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ethers.utils.formatUnits(swap.args.tokenGiveAmount.toString(), 'ether')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: swap.args.tokenGet === tokens[0].address ? symbols[0] : symbols[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ethers.utils.formatUnits(swap.args.tokenGetAmount.toString(), 'ether')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: swap.args.user.slice(0, 5) + '...' + swap.args.user.slice(38, 42)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(Number(swap.args.timestamp.toString() + '000')).toLocaleDateString(undefined, {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Charts, \"+3PvPFrLjz5ryE6indiDprQG45U=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["useSelector","useDispatch","Table","Chart","ethers","options","series","chartSelector","useEffect","Loading","loadAllSwaps","Charts","provider","state","connection","tokens","contracts","symbols","amm","contract","chart","dispatch","swaps","map","swap","index","hash","slice","args","tokenGive","address","utils","formatUnits","tokenGiveAmount","toString","tokenGet","tokenGetAmount","user","Date","Number","timestamp","toLocaleDateString","undefined","year","month","day","hour","minute","second"],"sources":["/home/arcturian/amm/src/components/Charts.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\nimport Table from 'react-bootstrap/Table';\nimport Chart from 'react-apexcharts';\nimport { ethers } from 'ethers'\n\nimport { options, series } from './Charts.config';\nimport { chartSelector } from '../store/selectors';\nimport { useEffect } from 'react'\n\nimport Loading from './Loading';\n\nimport {\n  loadAllSwaps\n} from '../store/interactions'\n\nconst Charts = () => {\n  const provider = useSelector(state => state.provider.connection)\n\n  const tokens = useSelector(state => state.tokens.contracts)\n  const symbols = useSelector(state => state.tokens.symbols)\n\n  const amm = useSelector(state => state.amm.contract)\n\n  const chart = useSelector(chartSelector)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if(provider && amm) {\n      loadAllSwaps(provider, amm, dispatch)\n    }\n  }, [provider, amm, dispatch])\n\n  return (\n    <div>\n      {provider && amm ? (\n        <div>\n          <Chart\n            type=\"line\"\n            options={options}\n            series={chart ? chart.series : series}\n            width=\"100%\"\n            height=\"100%\"\n          />\n\n          <hr />\n\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>Transaction Hash</th>\n                <th>Token Give</th>\n                <th>Amount Give</th>\n                <th>Token Get</th>\n                <th>Amount Get</th>\n                <th>User</th>\n                <th>Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {chart.swaps && chart.swaps.map((swap, index) => (\n                <tr key={index}>\n                  <td>{swap.hash.slice(0, 5) + '...' + swap.hash.slice(61, 66)}</td>\n                  <td>{swap.args.tokenGive === tokens[0].address ? symbols[0] : symbols[1]}</td>\n                  <td>{ethers.utils.formatUnits(swap.args.tokenGiveAmount.toString(), 'ether')}</td>\n                  <td>{swap.args.tokenGet === tokens[0].address ? symbols[0] : symbols[1]}</td>\n                  <td>{ethers.utils.formatUnits(swap.args.tokenGetAmount.toString(), 'ether')}</td>\n                  <td>{swap.args.user.slice(0, 5) + '...' + swap.args.user.slice(38, 42)}</td>\n                  <td>{\n                    new Date(Number(swap.args.timestamp.toString() + '000'))\n                      .toLocaleDateString(\n                        undefined,\n                        {\n                          year: 'numeric',\n                          month: 'long',\n                          day: 'numeric',\n                          hour: 'numeric',\n                          minute: 'numeric',\n                          second: 'numeric'\n                        }\n                      )\n                  }</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n\n      ) : (\n        <Loading/>\n      )}\n\n    </div>\n  );\n}\n\nexport default Charts;\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}